services:
  database:
    image: postgres:latest
    container_name: healthy-desk
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./database/database-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  backend:
    image: healthy-desk-backend:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    ports:
      - "3000:3000"
    depends_on:
      - database
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /Healthy-Desk-/backend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  # desk-simulator:
  #   image: healthy-desk-desk-simulator:latest
  #   build:
  #     context: .
  #     dockerfile: desk-simulator/Dockerfile
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - app-network

  frontend:
    image: healthy-desk-frontend:latest
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      - backend
    ports:
      - "4200:4200"
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /Healthy-Desk-/frontend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge